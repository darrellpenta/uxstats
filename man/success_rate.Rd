% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/success_rate-function.R
\name{success_rate}
\alias{success_rate}
\alias{completion_rate}
\alias{success_rate.numeric}
\alias{success_rate.data.frame}
\title{Compute stats for task success (completion) data}
\usage{
success_rate(.x, .y, ...)

completion_rate(.x, .y, ...)

\method{success_rate}{numeric}(.x, .y, ..., .alpha = NULL)

\method{success_rate}{data.frame}(.x, .y, ..., .alpha = NULL)
}
\arguments{
\item{.x}{You can pass an integer (>0) indicating the total number of successes, and provide the total number of trials  to \code{.y} (where the value of \code{.y} >= \code{.x}). Or you can pass a data frame containing trial data. See the examples below.}

\item{.y}{If \code{.x} is an integer representing the total number of successes, \code{.y} should be an integer indicating the total number of trials. Or, if \code{.x} is a long-format data frame, provide the unquoted name of the column containing the success data (as 1s and 0s) to \code{.y}.}

\item{...}{(Optional) If \code{.x} is a long-format data frame, you can pass the name of one or more grouping variables here as unquoted, comma-separated column names.}

\item{.alpha}{(Optional) A positive number (where 0 < \code{.alpha} < 1) specifying the desired confidence level to be used. The argument must be named (i.e., \code{.alpha=0.001}) or else the function may yield unexpected results. If the argument is omitted, the default value is 0.05, or a 95\% confidence level.}
}
\value{
A tibble with success rate(s), confidence interval information, and other information. All percentage values in the output fall within the range of 0 and 100.
}
\description{
\href{https://g.co/kgs/a7Zyyn}{Sauro and Lewis (2012)} describe various approaches for estimating success rates and generating confidence intervals when you're working with smaller sample sizes. \code{success_rate()} automatically determines which of several estimator adjustments is best suited to the data, and it returns a tibble with the original and adjusted success rates (as a percentage); a field to indicate which adjustment method was used; and information about the confidence interval. You can optionally include one or more grouping variables to compute success rates by groups, and modify the alpha level to adjust confidence intervals.
`success_rate()` and `completion_rate()` are synonyms.
}
\examples{
# If you want a summary for a single task,
# you can provide the number of successes
# and trials to .x and .y, respectively:

success_rate(15,20)

# The alpha level defaults to .alpha=0.05.
# You can provide your own alpha level
# to .alpha by naming the argument
# when you call the function:

success_rate(15,20, .alpha = 0.01)

# If you have a long-format data frame,
# where each row contains an individual's
# data, and at least one column includes
# success (as 1s) or failure (as 0s) values
# for a given task, you can pass the
# data frame to .x and specify the name
# of the task column:

mydata <-
data.frame("user_id" = c(1,2,3,4,5,6,7,8,9,10,11,12),
"task1" = c(1,0,0,1,0,0,1,1,0,0,1,0),
"group"=c("A","B","A","A","B","A","B","A","B","B","A","B"),
"version"=c(2,1,1,2,1,2,2,1,2,1,1,2),
stringsAsFactors = FALSE)

success_rate(mydata, task1)

# If you have one or more grouping variables,
# you pass them to the ... argument:
success_rate(mydata, task1, group, version, .alpha=0.1)

}
\seealso{
Other success rate estimators: 
\code{\link{problem_stats}()}
}
\concept{success rate estimators}
