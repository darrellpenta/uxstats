% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_vs_benchmark-function.R
\name{time_vs_bench}
\alias{time_vs_bench}
\alias{time_vs_bench.numeric}
\alias{time_vs_bench.data.frame}
\title{Compare time data to a benchmark}
\usage{
time_vs_bench(.x, ...)

\method{time_vs_bench}{numeric}(
  .x,
  .sd,
  .n,
  .m,
  ...,
  .alt = c("greater", "less", "twotailed"),
  .alpha = 0.05
)

\method{time_vs_bench}{data.frame}(
  .x,
  .var,
  .m,
  ...,
  .alt = c("greater", "less", "twotailed"),
  .alpha = 0.05
)
}
\arguments{
\item{.x}{A single numeric value, a vector of values, or a long-format data frame with a named column of numeric data corresponding to time values. See Details.}

\item{...}{(Optional) If \code{.x} is a long-format data frame, you can pass the name of one or more grouping variables as unquoted, comma-separated column names (without naming the \code{...} argument) to compute stats by groups.}

\item{.sd}{If \code{.x} is a single numeric value, \code{.sd} should be a single numeric value indicating the standard deviation of the log-transformed sample means. See Details}

\item{.n}{If \code{.x} is a single numeric value, \code{.n} should be a single numeric value indicating the sample size. See Details.}

\item{.m}{The test (benchmark) mean.}

\item{.alt}{(Optional) For test alternatives, one of \code{c("greater","less","twotailed")}. Defaults to "greater" for a one-sided test.}

\item{.alpha}{(Optional) A positive number (where 0 < \code{.alpha} < 1) specifying the significance level to be used. Defaults to \code{.alpha = 0.05}. To set a different significance level, the argument must be named (i.e., \code{.alpha=0.001}) or else the function may yield unexpected results.}

\item{.var}{If \code{.x} is a long-format data frame, the (unquoted) name of a data frame column containing task ratings (or values from another continuous metric).}
}
\value{
A tibble with data summaries and test results
}
\description{
\code{time_vs_bench()} tests a sample mean of time data (e.g., ratings)  against a given benchmark using a one-sample t-test.
}
\details{
Following \href{https://g.co/kgs/a7Zyyn}{Sauro and Lewis (2012)},\code{ratings_vs_bench} log transforms the time data in calculations when \code{.x} is a vector or data frame of raw times.It also log-transforms the benchmark mean in all calculations. If you pass a single numeric value to \code{.x} as a mean of sample times, be sure to log transform the mean and provide the standard deviation of the log-transformed times to the \code{.sd} argument.
\code{ratings_vs_bench} assumes that you want to test the hypothesis that the observed outcome \emph{does not exceed} the benchmark, and therefore, defaults to a one-tailed test. This means that setting \code{.alpha = 0.05} (the default) produces a 90\% confidence interval.

\itemize{
 \item If \code{.x} is a single numeric value representing the log-transformed sample mean, provide the standard deviation of the log-transformed times and sample size to \code{.sd} and \code{.n}, respectively.
 \item If \code{.x} is a numeric vector of ratings values, you should only specify the test (benchmark) mean.
 \item If \code{.x} is a data frame, \code{.var} should be the unquoted name of the column containing the time values.
 \item If you're passing a data frame to \code{.x}, you can optionally pass one or more grouping variables as unquoted, comma-separated column names (without naming the \code{...} argument) to compute stats by groups.
 \item You can choose from among the test alternatives \code{c("greater","less","twotailed")} by providing one of the options to the \code{.alt} argument: e.g., \code{.alt = "twotailed"}. Defaults to "greater" for a one-sided test.
 \item You can modify the alpha level to adjust confidence intervals by including \code{.alpha} as a named argument and providing a numeric value: e.g., \code{.aplha = 0.001}.
}

Note that \code{NAs} are automatically dropped in all calculations.
}
\examples{
# When passing individual values, make sure the mean and sd are log-transformed
.sample_mean <- 45
.sample_sd <- 12
time_vs_bench(.x=log(.sample_mean), .sd=log(.sample_sd), .n=20, .m = 60,.alt="less")

# You can pass a vector of raw (untransformed) times to .x:
time_vs_bench(.x=c(350,255,400,343,330,420), .m=375, .alt="less", .alpha=0.10)


.ux_data <-
data.frame(
 "id" = rep(seq(1,10,1),2),
 "group" = rep(c("A","B"),10),
 "task" = c(rep(1,10),rep(2,10)),
 "time"  = runif(20,200,1000)
)

time_vs_bench(.ux_data, .var=time,.m=600,task,.alt="less", .alpha=0.05 )
}
\seealso{
Other benchmark comparison stats: 
\code{\link{ratings_vs_bench}()},
\code{\link{success_vs_bench}()}
}
\concept{benchmark comparison stats}
