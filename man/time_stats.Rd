% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_stats-function.R
\name{time_stats}
\alias{time_stats}
\alias{time_stats.numeric}
\alias{time_stats.data.frame}
\title{Compute stats for time data}
\usage{
time_stats(.data, ...)

\method{time_stats}{numeric}(.data, ..., .alpha = NULL)

\method{time_stats}{data.frame}(.data, .var, ..., .alpha = NULL)
}
\arguments{
\item{.data}{A vector or long-format data frame of numeric data corresponding to task or response times.}

\item{...}{(Optional) The unquoted, comma-separated names of columns containing grouping variables.}

\item{.alpha}{(Optional) A positive number (where 0 < \code{.alpha} < 1) specifying the desired confidence level to be used. The argument must be named (i.e., \code{.alpha=0.001}) or else the function may yield unexpected results. If the argument is omitted, the default value is 0.05, or a 95\% confidence level.}

\item{.var}{(Optional) The unquoted name of the data frame column containing the values to use in the computation.}
}
\value{
A tibble with one or more means, confidence interval information, and other information.
}
\description{
\href{https://g.co/kgs/a7Zyyn}{Sauro and Lewis (2012)} describe various approaches for computing stats on task time or response time data when you're working with smaller sample sizes. \code{time_stats()} returns several point estimates, including means, geometric means (better when sample size <= 25), and medians (better for larger sample sizes). It also returns confidence interval information based on transformed data (for small samples) or raw data (for larger samples) for the sample size, andincludes a field to indicate whether the estimates are baed on raw or transformed data. You can optionally include one or more grouping variables to compute statistics by groups, and modify the alpha level to adjust confidence intervals.
`success_rate()` and `completion_rate()` are synonyms.
}
\examples{
time_stats(c(40, 36, 53, 56, 110, 48, 34, 44, 30, 40, 80))

mydat <-
data.frame(
 "id" = rep(seq(1,10,1),2),
 "group" = rep(c("A","B"),10),
 "task" = c(rep(1,10),rep(2,10)),
 "time"  = runif(20,0,1000)
)

time_stats(mydat, .var=time, group, task, .alpha = 0.001)
}
\seealso{
Other means with confidence intervals: 
\code{\link{ratings_stats}()}
}
\concept{means with confidence intervals}
